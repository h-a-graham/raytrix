[{"path":"https://h-a-graham.github.io/raytrix/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hugh Graham. Author, maintainer.","code":""},{"path":"https://h-a-graham.github.io/raytrix/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Graham H (2021). raytrix: Package (One Line, Title Case). R package version 0.0.1, https://h--graham.github.io/raytrix/.","code":"@Manual{,   title = {raytrix: What the Package Does (One Line, Title Case)},   author = {Hugh Graham},   year = {2021},   note = {R package version 0.0.1},   url = {https://h-a-graham.github.io/raytrix/}, }"},{"path":"https://h-a-graham.github.io/raytrix/index.html","id":"raytrix","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"{rayshader} plugin providing spatial framework convenience functions accessing spatial data. similar may replace {ravista}. things still much development.","code":""},{"path":"https://h-a-graham.github.io/raytrix/index.html","id":"quick-introduction","dir":"","previous_headings":"","what":"Quick Introduction","title":"What the Package Does (One Line, Title Case)","text":"Install Project Canvas: {raytrix} must first set strict geospatial region defines bounds area mapped; referred canvas. can achieved direct input spatial oject (currently sf RasterLayer, RasterBrick). global values set extent projections can viewed get_canvas(). Extent object can produced used {rayshader} functions generate_overlay. Data: Now can use {raytrix} warp raster data online -disk sources using awesome {vapour} package. functions enable retrieval topographic (single band raster) overlay (3-band raster data) data “rayshader-ready” format. .e. matrix topo_matrix 4 dimensional array map_drape (4th dim alpha). Helplers: additional helpers easing interoperability spatial plotting libraries (come : Examples Simple map drape DEM.  Add shading scene {rayshader}  Global hill shade using Adams World Square II projection.","code":"devtools::install_github('h-a-graham/raytrix') set_canvas(xmin, ymin, xmax, ymax, crs)  # basic argument for setting canvas - Done set_canvas_raster(rasterLayer)  # set canvas from a raster data class - Done set_canvas_sf(sf/sfc, mask = FALSE)  # set canvas from an sf/sfc object - Done set_canvas_centroid(long, lat, radius, crs=4326)  # set canvas from cetroid and radius - Done (although will probably change) get_canvas()  # retrieves the extent and crs parameters if required for additional steps... - Done canvasExtent() # get an object of class Extent for using in other {rayshader} functions - Done topo_matrix(res, src='aws', ...)   map_drape(res, src='esri.aerial', alpha=1 ...) # many options now available here - need to check in on API Key requirements. texture_to_brick() #  converts a rayshader texture to a raster with the correct extent and crs. library(raytrix) library(rayshader)  # ---- Mt St Helens ------------ .lat <- 46.200732 .long <- -122.187082 set_canvas_centroid(.lat, .long, radius = 7000) get_canvas()$extent  tc <- topo_matrix(20) ov <- map_drape(5)  plot_3d(ov, tc, zscale=20*0.75,  windowsize = 1000,         theta=150, phi=45, zoom=0.7, fov=50) render_snapshot(clear=TRUE) # build in rayshader shading tools ov %>%   add_shadow(., ray_shade(tc, zscale=20*0.75,                            sunangle=70, sunaltitude= 30), 0) %>%    plot_3d(., tc, zscale=20*0.75,  windowsize = 1000,           theta=150, phi=45, zoom=0.7, fov=50)  render_snapshot(clear=TRUE) prj <- \"+proj=adams_ws2\" set_canvas_world(projection = prj) # get_canvas(3e4) # check canvas resolution with this in case your being ambitious...  tm <- topo_matrix(3e4) grats <- sf::st_as_sf(graticule::graticule(proj = prj, tiles=T)) # get graticule  tm %>%   height_shade(heat.colors(256)) %>%   add_shadow(lamb_shade(tm, sunaltitude=25, zscale=0.8)) %>%   add_overlay(generate_polygon_overlay(grats, canvasExent(),tm,                                         linecolor=\"#900C3F\", palette = NA),  alphalayer = 0.7) %>%   plot_map(title_text = 'Adams World in a Square II', title_color='#900C3F')"},{"path":"https://h-a-graham.github.io/raytrix/reference/heightmap_to_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Covert a rayshader heightmap to a Raster — heightmap_to_raster","title":"Covert a rayshader heightmap to a Raster — heightmap_to_raster","text":"retrieve rayshader texture RasterBrick. handy want save texture file spatial reference want  plot alternative package ggplot tmap etc.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/heightmap_to_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covert a rayshader heightmap to a Raster — heightmap_to_raster","text":"","code":"heightmap_to_raster(heightmap)"},{"path":"https://h-a-graham.github.io/raytrix/reference/heightmap_to_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covert a rayshader heightmap to a Raster — heightmap_to_raster","text":"texture texture created rayshader pipeline.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/heightmap_to_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covert a rayshader heightmap to a Raster — heightmap_to_raster","text":"object class 'RasterBrick' raster package. data.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/map_drape.html","id":null,"dir":"Reference","previous_headings":"","what":"Get map overlay as array — map_drape","title":"Get map overlay as array — map_drape","text":"retrieve 3 dimensional (RGB ) array canvas region.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/map_drape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get map overlay as array — map_drape","text":"","code":"map_drape(res, src = \"wms_virtualearth\", alpha = 1, resample = \"Average\", ...)"},{"path":"https://h-a-graham.github.io/raytrix/reference/map_drape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get map overlay as array — map_drape","text":"res desired cell resolution matrix canvas CRS units. src Default 'wms_virtualearth'. server download map data. use raytrix::map_sources() see available built sources (provided gdalwebsrv) provide source. See details... alpha default 1, set transparency overlay data.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/map_drape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get map overlay as array — map_drape","text":"See https://github.com/hypertidy/gdalio https://gdal.org/drivers/raster/wms.html examples custom sources web. Alternatively, can download file specify local path.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/map_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"View options for Map layers — map_sources","title":"View options for Map layers — map_sources","text":"Function view options can used src value ratrix::map_drape()","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/map_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View options for Map layers — map_sources","text":"","code":"map_sources()"},{"path":"https://h-a-graham.github.io/raytrix/reference/map_sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View options for Map layers — map_sources","text":"character vector strings can used set topogrpahy data source raytrix::map_drape()","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"re-export magrittr pipe operator — %>%","title":"re-export magrittr pipe operator — %>%","text":"re-export magrittr pipe operator","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/plot_3d_mesh.html","id":null,"dir":"Reference","previous_headings":"","what":"plot texture over a 3d mesh — plot_3d_mesh","title":"plot texture over a 3d mesh — plot_3d_mesh","text":"alternative rayshader's plot_3d rather plotting elevation matrix converts","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/plot_3d_mesh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot texture over a 3d mesh — plot_3d_mesh","text":"","code":"plot_3d_mesh(height_map, texture, zscale = 0.2, lit = F, windowsize = 600, ...)"},{"path":"https://h-a-graham.github.io/raytrix/reference/raytrix_set_canvas.html","id":null,"dir":"Reference","previous_headings":"","what":"set/get the canvas of the rayshader-ratrix project — raytrix_set_canvas","title":"set/get the canvas of the rayshader-ratrix project — raytrix_set_canvas","text":"enable downloading rayshader-readable data desired extent, necessary set rayshader-ratrix scene canvas using one set_canvas_x() functions. See details additional info.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/raytrix_set_canvas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set/get the canvas of the rayshader-ratrix project — raytrix_set_canvas","text":"","code":"set_canvas(bounds, projection)  set_canvas_world(projection = \"+proj=longlat +datum=WGS84\")  set_canvas_sf(.sf, mask = F)  set_canvas_raster(.raster, mask = F)  set_canvas_centroid(   lat,   long,   radius = 5000,   projection = \"+proj=longlat +datum=WGS84\" )  get_canvas(res)  canvasExent()"},{"path":"https://h-a-graham.github.io/raytrix/reference/raytrix_set_canvas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set/get the canvas of the rayshader-ratrix project — raytrix_set_canvas","text":"bounds numeric vector length 4. e.g. c(xmin, xmax, ymin, ymax) projection ... .sf sf/sfc object used set extent projection canvas mask Default F. WORKING YET! .raster raster object used set extent projection canvas lat ... long ... radius ... res resolution (.e pixel dimensions) units canvas crs (get_canvas()$)","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/raytrix_set_canvas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"set/get the canvas of the rayshader-ratrix project — raytrix_set_canvas","text":"set_canvas() offers control extent projection raytrix canvas. Use set_canvas_world() basic WGS84 extent world; deliberately simple, alternative global projections use set_canvas(). set_canvas_sf() sets canvas sf sfc object; can especially useful intend plot sf features overlays. set_canvas_centroid() allows provision lat long coordinates buffer (meters) around point set extent; function takes WGS84 coords default (although can changed) always convert Pseudo Mercator convenience. retrieve information use get_canvas() returns list including: extent, projection (res provided) dimension. canvasExent() returns raytrix extent object copy raster Extent object. can used combination rayshader functions generate_polygon_overlay() provide extent topography matrix.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/raytrix_set_canvas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"set/get the canvas of the rayshader-ratrix project — raytrix_set_canvas","text":"","code":"# set canvas with Universal Polar Stereographic set_canvas(c(-4e7,  4e7, -4e7,  4e7 ),'+proj=ups') get_canvas() #> $extent #> [1] -4e+07  4e+07 -4e+07  4e+07 #>  #> $projection #> [1] \"+proj=ups\" #>  get_canvas(4e4) #> $extent #> [1] -4e+07  4e+07 -4e+07  4e+07 #>  #> $projection #> [1] \"+proj=ups\" #>  #> $dimension #>    x    y  #> 2000 2000  #>   # set canvas with tilted perspective... set_canvas(c(-3.8e6,  3.8e6, -3.8e6,  3.8e6 ),'+proj=tpers +h=5500000 +lat_0=40') get_canvas(4e4) #> $extent #> [1] -3800000  3800000 -3800000  3800000 #>  #> $projection #> [1] \"+proj=tpers +h=5500000 +lat_0=40\" #>  #> $dimension #>   x   y  #> 190 190  #>   # set WGS84 global extent set_canvas_world() get_canvas(0.7) #> $extent #> [1] -180  180  -90   90 #>  #> $projection #> [1] \"+proj=longlat +datum=WGS84\" #>  #> $dimension #>   x   y  #> 515 258  #>   # set canvas for Mt. St Helens set_canvas_centroid(46.200732, -122.187082, radius = 7000) #> Warning: `set_canvas_centroid() `converts coordinates to web mercator for convnience.to set a specific canvas extent and projection use `set_canvas()` get_canvas(10) #> $extent #>      xmin      xmax      ymin      ymax  #> -13608804 -13594804   5805575   5819575  #>  #> $projection #> [1] \"PROJCRS[\\\"WGS 84 / Pseudo-Mercator\\\",\\n    BASEGEOGCRS[\\\"WGS 84\\\",\\n        DATUM[\\\"World Geodetic System 1984\\\",\\n            ELLIPSOID[\\\"WGS 84\\\",6378137,298.257223563,\\n                LENGTHUNIT[\\\"metre\\\",1]]],\\n        PRIMEM[\\\"Greenwich\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        ID[\\\"EPSG\\\",4326]],\\n    CONVERSION[\\\"Popular Visualisation Pseudo-Mercator\\\",\\n        METHOD[\\\"Popular Visualisation Pseudo Mercator\\\",\\n            ID[\\\"EPSG\\\",1024]],\\n        PARAMETER[\\\"Latitude of natural origin\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8801]],\\n        PARAMETER[\\\"Longitude of natural origin\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8802]],\\n        PARAMETER[\\\"False easting\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8806]],\\n        PARAMETER[\\\"False northing\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8807]]],\\n    CS[Cartesian,2],\\n        AXIS[\\\"easting (X)\\\",east,\\n            ORDER[1],\\n            LENGTHUNIT[\\\"metre\\\",1]],\\n        AXIS[\\\"northing (Y)\\\",north,\\n            ORDER[2],\\n            LENGTHUNIT[\\\"metre\\\",1]],\\n    USAGE[\\n        SCOPE[\\\"unknown\\\"],\\n        AREA[\\\"World - 85°S to 85°N\\\"],\\n        BBOX[-85.06,-180,85.06,180]],\\n    ID[\\\"EPSG\\\",3857]]\" #>  #> $dimension #>    x    y  #> 1400 1400  #>   # set canvas with sf object. library(sf) #> Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1 demo(nc, ask = FALSE, echo = FALSE) #> Reading layer `nc.gpkg' from data source  #>   `/home/runner/work/_temp/Library/sf/gpkg/nc.gpkg' using driver `GPKG' #> Simple feature collection with 100 features and 14 fields #> Attribute-geometry relationship: 0 constant, 8 aggregate, 6 identity #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 set_canvas_sf(nc) #> Warning: Canvas projection is not cartesian.Be careful of the units you use to specify `res`! get_canvas(7e-3) #> $extent #>      xmin      xmax      ymin      ymax  #> -84.32385 -75.45698  33.88199  36.58965  #>  #> $projection #> [1] \"GEOGCRS[\\\"NAD27\\\",\\n    DATUM[\\\"North American Datum 1927\\\",\\n        ELLIPSOID[\\\"Clarke 1866\\\",6378206.4,294.978698213898,\\n            LENGTHUNIT[\\\"metre\\\",1]]],\\n    PRIMEM[\\\"Greenwich\\\",0,\\n        ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    CS[ellipsoidal,2],\\n        AXIS[\\\"geodetic latitude (Lat)\\\",north,\\n            ORDER[1],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n        AXIS[\\\"geodetic longitude (Lon)\\\",east,\\n            ORDER[2],\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433]],\\n    USAGE[\\n        SCOPE[\\\"unknown\\\"],\\n        AREA[\\\"North America - NAD27\\\"],\\n        BBOX[7.15,167.65,83.17,-47.74]],\\n    ID[\\\"EPSG\\\",4267]]\" #>  #> $dimension #>    x    y  #> 1267  387  #>   canvas_extent() #> Error in canvas_extent(): could not find function \"canvas_extent\""},{"path":"https://h-a-graham.github.io/raytrix/reference/rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function which is used to rotate matrices and arrays. — rotate","title":"Internal function which is used to rotate matrices and arrays. — rotate","text":"Internal function used rotate matrices arrays.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function which is used to rotate matrices and arrays. — rotate","text":"","code":"rotate(x)"},{"path":"https://h-a-graham.github.io/raytrix/reference/rtrix_data.html","id":null,"dir":"Reference","previous_headings":"","what":"High Level Data download method. — rtrix_data","title":"High Level Data download method. — rtrix_data","text":"retrieve raster using vapour::warp desired source. function taken gdalio https://github.com/hypertidy/gdalio/blob/main/R/gdalio.R","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/rtrix_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"High Level Data download method. — rtrix_data","text":"","code":"rtrix_data(dsn, res, resample, ..., bands = 1L)"},{"path":"https://h-a-graham.github.io/raytrix/reference/rtrix_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"High Level Data download method. — rtrix_data","text":"res desired cell resolution matrix canvas CRS units. src server download topographic map data. See details:","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/rtrix_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"High Level Data download method. — rtrix_data","text":"#' See https://github.com/hypertidy/gdalio https://gdal.org/drivers/raster/wms.html examples custom sources web. Alternatively, can download file specify local path.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/texture_to_brick.html","id":null,"dir":"Reference","previous_headings":"","what":"Covert a rayshader texture to a RasterBrick — texture_to_brick","title":"Covert a rayshader texture to a RasterBrick — texture_to_brick","text":"retrieve rayshader texture RasterBrick. handy want save texture file spatial reference want  plot alternative package ggplot tmap etc.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/texture_to_brick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covert a rayshader texture to a RasterBrick — texture_to_brick","text":"","code":"texture_to_brick(texture)"},{"path":"https://h-a-graham.github.io/raytrix/reference/texture_to_brick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covert a rayshader texture to a RasterBrick — texture_to_brick","text":"texture texture created rayshader pipeline.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/texture_to_brick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covert a rayshader texture to a RasterBrick — texture_to_brick","text":"object class 'RasterBrick' raster package. data.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/topo_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get topography matrix — topo_matrix","title":"Get topography matrix — topo_matrix","text":"retrieve topographical matrix canvas region. Set resolution cell size elevation source.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/topo_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get topography matrix — topo_matrix","text":"","code":"topo_matrix(res, src = \"aws\", resample = \"CubicSpline\", ...)"},{"path":"https://h-a-graham.github.io/raytrix/reference/topo_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get topography matrix — topo_matrix","text":"res desired cell resolution matrix canvas CRS units. src Default 'aws'. server download topographic data. Use raytrix::topo_sources() view available sources (via toppgraphy). See details.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/topo_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get topography matrix — topo_matrix","text":"See https://github.com/hypertidy/gdalio https://gdal.org/drivers/raster/wms.html examples custom sources web. Alternatively, can download file specify local path.","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/topo_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"View options for Topography layers — topo_sources","title":"View options for Topography layers — topo_sources","text":"Function view options can used src value ratrix::topo_matrix()","code":""},{"path":"https://h-a-graham.github.io/raytrix/reference/topo_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View options for Topography layers — topo_sources","text":"","code":"topo_sources()"},{"path":"https://h-a-graham.github.io/raytrix/reference/topo_sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View options for Topography layers — topo_sources","text":"character vector strings can used set topogrpahy data source raytrix::topo_matrix()","code":""}]
